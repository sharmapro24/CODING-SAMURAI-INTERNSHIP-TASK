HTML CODE:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Upload</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="app-container">
        <h1>Upload Your Image</h1>
        <div id="dropzone" class="dropzone">
            <i class="fas fa-cloud-upload-alt"></i>
            <p>Drag & Drop or Click to Browse</p>
            <input type="file" id="fileInput" accept="image/*" multiple style="display:none;">
        </div>
        <div id="fileList" class="file-list"></div>
    </div>
    <script src="scripts.js"></script>
</body>
</html>


CSS CODE:

/* Carousel Styles */
.carousel {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: -1;
    overflow: hidden;
}

.carousel-items {
    display: flex;
    width: 200%; /* Assuming 2 images, increase as per number of images */
    animation: slide 10s infinite;
}

.carousel-item {
    flex: 1;
    width: 100vw;
    height: 100vh;
    background-size: cover;
    background-position: center;
}

/* Carousel Animation */
@keyframes slide {
    0%, 50% {
        transform: translateX(0%);
    }
    50.1%, 100% {
        transform: translateX(-50%);
    }
}

/* UI Brighter Styles */
body {
    font-family: 'Poppins', sans-serif;
    background-color: #FFD700; /* Bright Yellow */
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.app-container {
    background: rgba(255,255,255,0.8); /* Semi-transparent White */
    padding: 30px;
    border-radius: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 80%;
    max-width: 500px;
}

h1 {
    text-align: center;
    color: #FF4500; /* Bright Orange */
    margin-bottom: 20px;
}

.dropzone {
    cursor: pointer;
    padding: 60px 40px;
    background: #FFFAF0; /* Creamy */
    border: 2px dashed #FF6347; /* Tomato Red */
    border-radius: 10px;
    text-align: center;
    transition: background 0.3s ease-in-out;
    position: relative;
}

.dropzone:hover {
    background: #E1E3E8;
}

.dropzone p {
    color: #333;
    font-weight: 500;
    margin: 10px 0;
}

.dropzone p span {
    color: #FF6347; /* Tomato Red */
    text-decoration: underline;
    cursor: pointer;
}

.dropzone i {
    font-size: 40px;
    color: #FF6347; /* Tomato Red */
    margin-bottom: 15px;
}

.file-list {
    margin-top: 20px;
}

.file-name {
    background: #FFFACD; /* LemonChiffon */
    padding: 15px;
    border-radius: 10px;
    margin-top: 10px;
    display: flex;
    align-items: center;
    transition: background 0.3s ease-in-out;
}

.file-name:hover {
    background: #E1E3E8;
}

img.thumbnail {
    max-width: 50px;
    max-height: 50px;
    margin-right: 15px;
    border-radius: 50%;
}

/* Animation */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.dropzone, .file-name {
    animation: fadeInUp 0.5s forwards;
}

.delete-icon {
    margin-left: auto; /* Pushes the icon to the right end */
    cursor: pointer;
    padding: 5px;
    background-color: green;
    color: white;
    border-radius: 50%; /* Makes it circular */
}

textarea {
    width: 100%;
    padding: 5px;
    margin-top: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    resize: vertical; /* Allows vertical resizing only */
}

JAVASCRIPT CODE:

document.addEventListener("DOMContentLoaded", function() {
    const dropzone = document.getElementById('dropzone');
    const fileInput = document.getElementById('fileInput');
    const fileList = document.getElementById('fileList');
    const MAX_IMAGES = 5;

    dropzone.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropzone.style.backgroundColor = '#e0e0e0';
    });

    dropzone.addEventListener('dragleave', () => {
        dropzone.style.backgroundColor = '#fff';
    });

    dropzone.addEventListener('drop', (e) => {
        e.preventDefault();
        dropzone.style.backgroundColor = '#fff';

        const files = e.dataTransfer.files;
        manageFiles(files);
    });

    fileInput.addEventListener('change', (e) => {
        const files = e.target.files;
        manageFiles(files);
    });

    dropzone.addEventListener('click', () => {
        fileInput.click();
    });

    function manageFiles(files) {
        let totalFiles = fileList.children.length;
    
        Array.from(files).forEach(file => {
            // Check if the file is an image
            if (!file.type.startsWith('image/')) {
                alert("File " + file.name + " is not an image and won't be added.");
            }
            // Check if the file size is greater than 1MB
            else if (file.size > 1024 * 1024) {
                alert("File " + file.name + " is larger than 1MB and won't be added.");
            } else {
                totalFiles++;
                if (totalFiles <= MAX_IMAGES) {
                    displayFile(file);
                } else {
                    alert("Maximum images allowed is " + MAX_IMAGES + ". " + file.name + " won't be added.");
                }
            }
        });
    
        // Remove excess files if necessary
        while (fileList.children.length > MAX_IMAGES) {
            fileList.removeChild(fileList.firstChild);
        }
    
        saveToLocalStorage();
    }

    function displayFile(file) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
            const div = document.createElement('div');
            div.className = 'file-name';
        
            const img = document.createElement('img');
            img.src = e.target.result;
            img.alt = file.name;
            img.className = 'thumbnail';
            div.appendChild(img);
    
            // Add a textarea for image description
            const textarea = document.createElement('textarea');
            textarea.placeholder = "Add a description...";
    
            // Save to localStorage once the description is added/changed and textarea loses focus
            textarea.addEventListener('blur', saveToLocalStorage);
    
            div.appendChild(textarea);
        
            const deleteIcon = document.createElement('span');
            deleteIcon.textContent = '❌';
            deleteIcon.className = 'delete-icon';
            deleteIcon.addEventListener('click', function() {
                fileList.removeChild(div);
                saveToLocalStorage();
            });
            div.appendChild(deleteIcon);
        
            fileList.appendChild(div);
        }
        
        reader.readAsDataURL(file);
    }

    function saveToLocalStorage() {
        const imagesData = Array.from(fileList.children).map(child => {
            return {
                src: child.querySelector('.thumbnail').src,
                description: child.querySelector('textarea').value
            };
        });
        console.log("Saving to localStorage:", imagesData);
        localStorage.setItem('storedImagesData', JSON.stringify(imagesData));
    }
    
    function loadFromLocalStorage() {
        const storedImagesData = JSON.parse(localStorage.getItem('storedImagesData') || '[]');
        console.log("Loaded from localStorage:", storedImagesData);
        storedImagesData.forEach(data => {
            const div = document.createElement('div');
            div.className = 'file-name';
    
            const img = document.createElement('img');
            img.src = data.src;
            img.className = 'thumbnail';
            div.appendChild(img);
    
            const textarea = document.createElement('textarea');
            textarea.value = data.description;
            textarea.placeholder = "Add a description...";
            div.appendChild(textarea);
    
            const deleteIcon = document.createElement('span');
            deleteIcon.textContent = '❌';
            deleteIcon.className = 'delete-icon';
            deleteIcon.addEventListener('click', function() {
                fileList.removeChild(div);
                saveToLocalStorage();
            });
            div.appendChild(deleteIcon);
    
            fileList.appendChild(div);
        });
    }
    
    loadFromLocalStorage();
});
